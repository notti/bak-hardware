################################################################################
##$Date: 2008/05/30 00:57:53 $
##$RCSfile: rocketiowizard_ftype.ejava,v $
##$Revision: 1.1.2.1 $
################################################################################
##   ____  ____ 
##  /   /\/   / 
## /___/  \  /    Vendor: Xilinx 
## \   \   \/     Version : 1.5
##  \   \         Application : RocketIO GTX Wizard 
##  /   /         Filename : gtx_xmdf.tcl
## /___/   /\     Timestamp : 02/08/2005 09:12:43
## \   \  /  \ 
##  \___\/\___\ 
##
##
## XMDF file for GTX
## Generated by Xilinx RocketIO GTX Wizard
##


# The package naming convention is <core_name>_xmdf
package provide gtx_xmdf 1.0

# This includes some utilities that support common XMDF operations
package require utilities_xmdf

# Define a namespace for this package. The name of the name space
# is <core_name>_xmdf
namespace eval ::gtx_xmdf {
# Use this to define any statics
}

# Function called by client to rebuild the params and port arrays
# Optional when the use context does not require the param or ports
# arrays to be available.
proc ::gtx_xmdf::xmdfInit { instance } {
# Variable containg name of library into which module is compiled
# Recommendation: <module_name>
# Required
utilities_xmdf::xmdfSetData $instance Module Attributes Name gtx
}
# ::gtx_xmdf::xmdfInit

# Function called by client to fill in all the xmdf* data variables
# based on the current settings of the parameters
proc ::gtx_xmdf::xmdfApplyParams { instance } {

set fcount 0
# Array containing libraries that are assumed to exist
# Examples include unisim and xilinxcorelib
# Optional
# In this example, we assume that the unisim library will
# be magically
# available to the simulation and synthesis tool
utilities_xmdf::xmdfSetData $instance FileSet $fcount type logical_library
utilities_xmdf::xmdfSetData $instance FileSet $fcount logical_library unisim
incr fcount

utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path gtx/example/instantiation_template.vho
utilities_xmdf::xmdfSetData $instance FileSet $fcount type vhdl_template
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path gtx/src/gtx_tile.vhd
utilities_xmdf::xmdfSetData $instance FileSet $fcount type vhdl
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path gtx/src/gtx.vhd
utilities_xmdf::xmdfSetData $instance FileSet $fcount type vhdl
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount relative_path gtx.xco
utilities_xmdf::xmdfSetData $instance FileSet $fcount type coregen_ip
incr fcount


utilities_xmdf::xmdfSetData $instance FileSet $fcount associated_module gtx
incr fcount

}

# ::gen_comp_name_xmdf::xmdfApplyParams

